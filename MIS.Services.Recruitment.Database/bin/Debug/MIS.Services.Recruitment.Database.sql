/*
Deployment script for MIS.Services.Recruitment.Database_2

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MIS.Services.Recruitment.Database_2"
:setvar DefaultFilePrefix "MIS.Services.Recruitment.Database_2"
:setvar DefaultDataPath "C:\Users\vaibhavwa\AppData\Local\Microsoft\VisualStudio\SSDT\MIS.Services.Recruitment.Database"
:setvar DefaultLogPath "C:\Users\vaibhavwa\AppData\Local\Microsoft\VisualStudio\SSDT\MIS.Services.Recruitment.Database"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Login [admin0]...';


GO
CREATE LOGIN [admin0]
    WITH PASSWORD = N'in6enrogoj<beiw#kwomCxzomsFT7_&#$!~<tlXBzsl~#t<j';


GO
PRINT N'Creating User [admin0]...';


GO
CREATE USER [admin0] FOR LOGIN [admin0];


GO
REVOKE CONNECT TO [admin0];


GO
PRINT N'Creating Table [dbo].[Candidate]...';


GO
CREATE TABLE [dbo].[Candidate] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]     VARCHAR (255) NOT NULL,
    [LastName]      VARCHAR (255) NOT NULL,
    [DateOfJoining] DATE          NULL,
    [Dob]           DATE          NOT NULL,
    [Email]         VARCHAR (255) NOT NULL,
    [Ctc]           VARCHAR (255) NULL,
    [DesignationId] INT           NULL,
    [StatusId]      INT           NOT NULL,
    [Gender]        VARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CandidateStatusLog]...';


GO
CREATE TABLE [dbo].[CandidateStatusLog] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [ActedById]   INT           NOT NULL,
    [Date]        DATE          NOT NULL,
    [Notes]       VARCHAR (255) NOT NULL,
    [StatusId]    INT           NOT NULL,
    [CandidateId] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Status]...';


GO
CREATE TABLE [dbo].[Status] (
    [Id]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (255) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Candidate]...';


GO
ALTER TABLE [dbo].[Candidate] WITH NOCHECK
    ADD FOREIGN KEY ([StatusId]) REFERENCES [dbo].[Status] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[CandidateStatusLog]...';


GO
ALTER TABLE [dbo].[CandidateStatusLog] WITH NOCHECK
    ADD FOREIGN KEY ([CandidateId]) REFERENCES [dbo].[Candidate] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[CandidateStatusLog]...';


GO
ALTER TABLE [dbo].[CandidateStatusLog] WITH NOCHECK
    ADD FOREIGN KEY ([StatusId]) REFERENCES [dbo].[Status] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
IF (SELECT COUNT(*) from [dbo].[Status]) = 0
BEGIN
	INSERT [dbo].[Status] ([Name]) VALUES ('New')
	INSERT [dbo].[Status] ([Name]) VALUES ('Interview Scheduled')
	INSERT [dbo].[Status] ([Name]) VALUES ('Interview in Progress')
	INSERT [dbo].[Status] ([Name]) VALUES ('Offer Given')
	INSERT [dbo].[Status] ([Name]) VALUES ('Rejected')
    INSERT [dbo].[Status] ([Name]) VALUES ('On Hold')
	INSERT [dbo].[Status] ([Name]) VALUES ('Not Responding')
	INSERT [dbo].[Status] ([Name]) VALUES ('Offer Rejected')
	INSERT [dbo].[Status] ([Name]) VALUES ('Joined')
END

IF (SELECT COUNT(*) from [dbo].[Candidate]) = 0
BEGIN
	INSERT [dbo].[Candidate] ([FirstName],[LastName],[DateOfJoining],[Dob],[Email],[Ctc],[DesignationId],[StatusId],[Gender]) VALUES ('Shweta','Todkar','2023-01-01','1997-03-03','shweta@gmail.com','500000',1,1,'Female')
	INSERT [dbo].[Candidate] ([FirstName],[LastName],[DateOfJoining],[Dob],[Email],[Ctc],[DesignationId],[StatusId],[Gender]) VALUES ('Soma','Das','2023-01-01','1996-02-02','soma@gmail.com','600000',1,1,'Female')
	INSERT [dbo].[Candidate] ([FirstName],[LastName],[DateOfJoining],[Dob],[Email],[Ctc],[DesignationId],[StatusId],[Gender]) VALUES ('Shivam','Jagtap','2023-02-02','1997-05-05','shivam@gmail.com','500000',1,1,'Male')
END

IF (SELECT COUNT(*) from [dbo].[CandidateStatusLog]) = 0
BEGIN
    INSERT [dbo].[CandidateStatusLog] ([ActedById],[Date],[Notes],[CandidateId],[StatusId]) VALUES (1,'2023-01-01','Candi reg',1,1)
	INSERT [dbo].[CandidateStatusLog] ([ActedById],[Date],[Notes],[CandidateId],[StatusId]) VALUES (2,'2023-01-01','Candi reg',2,1)
	INSERT [dbo].[CandidateStatusLog] ([ActedById],[Date],[Notes],[CandidateId],[StatusId]) VALUES (3,'2023-02-02','Candi reg',3,1)
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Candidate'), OBJECT_ID(N'dbo.CandidateStatusLog'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
